{
	"info": {
		"_postman_id": "36c47adc-b297-488a-825d-919fb80618ea",
		"name": "Postman Automation Kasir AJA API",
		"description": "Part of MySkillâ€™s learning project  \nThis collection includes test cases for login, create user, and get user endpoints.  \nEach request includes assertion checks for status code and response body validation.  \nData-driven test is also implemented for user creation using CSV input.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "49033900",
		"_collection_link": "https://nurachmad-gianriri-7192462.postman.co/workspace/MySkill-Learning~3bf0bc90-d82c-4806-8f08-704b030bb12f/collection/49033900-36c47adc-b297-488a-825d-919fb80618ea?action=share&source=collection_link&creator=49033900"
	},
	"item": [
		{
			"name": "Postman Automation Case Study",
			"item": [
				{
					"name": "Login Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"JSON structure contains accessToken\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data).to.have.property(\"accessToken\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"email\": \"komputer@mailsac.com\",\r\n   \"password\": \"1234567\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/authentications",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"authentications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Kasir",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(201));\r",
									"pm.test(\"Message is correct\", () => {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User berhasil ditambahkan\");\r",
									"});\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"pm.environment.set(\"userId\", jsonData.data.userId);"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Toko Komputer Gaming\",\r\n   \"email\": \"{{$randomEmail}}\",\r\n   \"password\": \"1234567\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/users",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Kasir",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains users array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.users).to.be.an(\"array\");\r",
									"    pm.expect(jsonData.data.users[0]).to.have.property(\"name\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseUrl}}/users",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Data Driven Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(201));\r",
									"\r",
									"pm.test(\"Message is success\", () => {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.include(\"berhasil\");\r",
									"});\r",
									"\r",
									"// Cocokkan nama user di response dengan nama dari CSV\r",
									"pm.test(\"User name matches CSV input\", () => {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.name).to.eql(pm.iterationData.get(\"name\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/users",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}